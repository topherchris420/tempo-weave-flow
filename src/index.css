@tailwind base;
@tailwind components;
@tailwind utilities;

/* Interval - Temporal Modulation Design System
All colors MUST be HSL. This creates an ambient temporal environment.
*/

@layer base {
  :root {
    /* Temporal Base Colors */
    --background: 222 47% 4%;
    --foreground: 195 100% 95%;

    /* Temporal States */
    --temporal-deep: 232 65% 8%;
    --temporal-flow: 195 85% 12%;
    --temporal-calm: 185 70% 18%;
    --temporal-active: 175 80% 25%;
    --temporal-resonance: 165 90% 35%;
    
    /* Biometric Hues */
    --heart-rhythm: 0 70% 45%;
    --breath-flow: 190 85% 55%;
    --movement-pulse: 280 70% 65%;
    --attention-glow: 45 85% 75%;

    /* Moment Weight Gradients */
    --memory-fade: 220 30% 15%;
    --memory-glow: 195 100% 85%;
    --experience-deep: 232 85% 6%;
    --experience-light: 185 100% 92%;

    /* Interface States */
    --card: 222 45% 6%;
    --card-foreground: 195 90% 90%;
    --popover: 222 55% 8%;
    --popover-foreground: 195 95% 95%;

    --primary: 195 85% 65%;
    --primary-foreground: 222 90% 8%;
    --secondary: 232 40% 12%;
    --secondary-foreground: 195 80% 85%;

    --muted: 222 35% 10%;
    --muted-foreground: 195 50% 70%;
    --accent: 185 70% 25%;
    --accent-foreground: 195 95% 90%;

    --destructive: 0 65% 55%;
    --destructive-foreground: 210 40% 98%;

    --border: 222 30% 15%;
    --input: 222 25% 12%;
    --ring: 195 85% 65%;

    --radius: 1rem;

    /* Temporal Gradients */
    --gradient-temporal: linear-gradient(135deg, hsl(var(--temporal-deep)), hsl(var(--temporal-flow)));
    --gradient-biometric: linear-gradient(90deg, hsl(var(--heart-rhythm)), hsl(var(--breath-flow)), hsl(var(--movement-pulse)));
    --gradient-memory: linear-gradient(180deg, hsl(var(--memory-fade)), hsl(var(--memory-glow)));
    --gradient-ambient: radial-gradient(circle, hsl(var(--temporal-resonance) / 0.1), hsl(var(--temporal-deep) / 0.8));

    /* Temporal Shadows */
    --shadow-temporal: 0 8px 32px hsl(var(--temporal-deep) / 0.6);
    --shadow-biometric: 0 0 40px hsl(var(--breath-flow) / 0.3);
    --shadow-resonance: 0 0 60px hsl(var(--temporal-resonance) / 0.4);

    /* Breathing Animations */
    --breath-duration: 4s;
    --pulse-duration: 2s;
    --flow-duration: 8s;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-hidden;
  }
}

@layer components {
  /* Temporal Animation Classes */
  .temporal-breathe {
    animation: temporal-breathe var(--breath-duration) ease-in-out infinite;
  }
  
  .biometric-pulse {
    animation: biometric-pulse var(--pulse-duration) ease-in-out infinite;
  }
  
  .temporal-flow {
    animation: temporal-flow var(--flow-duration) linear infinite;
  }
  
  .moment-weight {
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .ambient-glow {
    filter: drop-shadow(var(--shadow-biometric));
  }
  
  .temporal-surface {
    background: var(--gradient-temporal);
    box-shadow: var(--shadow-temporal);
  }
  
  .biometric-indicator {
    background: var(--gradient-biometric);
    border-radius: 50%;
    filter: blur(1px);
  }
}

@layer utilities {
  /* Temporal Keyframes */
  @keyframes temporal-breathe {
    0%, 100% {
      transform: scale(1) rotate(0deg);
      opacity: 0.7;
    }
    50% {
      transform: scale(1.05) rotate(0.5deg);
      opacity: 1;
    }
  }
  
  @keyframes biometric-pulse {
    0%, 100% {
      transform: scale(1);
      filter: brightness(1);
    }
    50% {
      transform: scale(1.02);
      filter: brightness(1.2);
    }
  }
  
  @keyframes temporal-flow {
    0% {
      transform: translateX(-100%) rotate(0deg);
    }
    100% {
      transform: translateX(100vw) rotate(360deg);
    }
  }
  
  @keyframes moment-fade {
    0% {
      opacity: 1;
      transform: scale(1);
    }
    100% {
      opacity: 0.3;
      transform: scale(0.95);
    }
  }
  
  @keyframes experience-enhance {
    0% {
      opacity: 0.7;
      transform: scale(0.98);
    }
    100% {
      opacity: 1;
      transform: scale(1.02);
    }
  }
}